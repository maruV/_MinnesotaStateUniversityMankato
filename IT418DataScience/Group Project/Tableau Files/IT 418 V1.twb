<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' inline='true' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='RideShareBoston' name='excel-direct.0ry4ojg03owo0i1bnynw31v95786'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='G:/Semester 10/IT 418/Group Project/Datasets/RideShareBoston.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ry4ojg03owo0i1bnynw31v95786' name='RideShareBoston' table='[RideShareBoston$]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:1' lost='0' outcome='1' processed='99990'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='integer' name='timestamp' ordinal='1' />
            <column datatype='integer' name='hour' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='month' ordinal='4' />
            <column datatype='datetime' name='datetime' ordinal='5' />
            <column datatype='string' name='timezone' ordinal='6' />
            <column datatype='string' name='source' ordinal='7' />
            <column datatype='string' name='destination' ordinal='8' />
            <column datatype='string' name='cab_type' ordinal='9' />
            <column datatype='string' name='product_id' ordinal='10' />
            <column datatype='string' name='name' ordinal='11' />
            <column datatype='real' name='price' ordinal='12' />
            <column datatype='real' name='distance' ordinal='13' />
            <column datatype='real' name='latitude' ordinal='14' />
            <column datatype='real' name='longitude' ordinal='15' />
            <column datatype='real' name='temperature' ordinal='16' />
            <column datatype='string' name='source_neighborhood' ordinal='17' />
            <column datatype='string' name='destination_neighborhood' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timezone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timezone]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>timezone</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>destination</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cab_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cab_type]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>cab_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_neighborhood]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>source_neighborhood</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination_neighborhood]</local-name>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias>destination_neighborhood</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[RideShareBoston]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S10001:no:A1:S10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>99990</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='MonthCal' datatype='boolean' name='[Calculation_631629889915838465]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[month]=11' />
      </column>
      <column aggregation='None' caption='Distance (bin)' datatype='integer' name='[Distance (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[distance]' peg='0' size='0.2' />
      </column>
      <column aggregation='None' caption='3 Hour Range' datatype='integer' name='[Hour (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[hour]' peg='0' size='3' />
        <aliases>
          <alias key='0' value='12 am to 2:59 am' />
          <alias key='1' value='3 am to 5:59 am' />
          <alias key='2' value='6 am to 8:59 am' />
          <alias key='3' value='9 am to 11:59 am' />
          <alias key='4' value='12 pm to 2:59 pm' />
          <alias key='5' value='3 pm to 5:59 pm' />
          <alias key='6' value='6 pm to 8:59 pm' />
          <alias key='7' value='9 pm to 11:59 pm' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
        <aliases>
          <alias key='0' value='$0 to $4.99' />
          <alias key='1' value='$5 to $9.99' />
          <alias key='2' value='$10 to $ 14.99' />
          <alias key='3' value='$15 to $19.99' />
          <alias key='4' value='$20 to $24.99' />
          <alias key='5' value='$25 to $29.99' />
          <alias key='6' value='$30 to $34.99' />
          <alias key='7' value='$35 to $39.99' />
          <alias key='8' value='$40 to $44.99' />
          <alias key='9' value='$45 to $49.99' />
          <alias key='10' value='$50 to $54.99' />
          <alias key='11' value='$55 to $59.99' />
        </aliases>
      </column>
      <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
      <column caption='Datetime' datatype='date' datatype-customized='true' name='[datetime]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Destination' datatype='string' name='[destination]' role='dimension' type='nominal' />
      <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Timestamp' datatype='integer' name='[timestamp]' role='measure' type='quantitative' />
      <column caption='Timezone' datatype='string' name='[timezone]' role='dimension' type='nominal' />
      <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/maruv/Documents/My Tableau Repository/Datasources/RideShareBoston.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/22/2020 02:11:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='RideShareNeighborhoods(3) (RideShareBoston)' increment-value='%null%' refresh-type='create' rows-inserted='637976' timestamp-start='2020-04-22 02:11:47.522' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>637976</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>1</ordinal>
              <family>RideShareBoston</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>98414</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>2</ordinal>
              <family>RideShareBoston</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>3</ordinal>
              <family>RideShareBoston</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>4</ordinal>
              <family>RideShareBoston</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>datetime</remote-name>
              <remote-type>133</remote-type>
              <local-name>[datetime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>datetime</remote-alias>
              <ordinal>5</ordinal>
              <family>RideShareBoston</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timezone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[timezone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timezone</remote-alias>
              <ordinal>6</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>7</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>destination</remote-name>
              <remote-type>129</remote-type>
              <local-name>[destination]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>destination</remote-alias>
              <ordinal>8</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cab_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cab_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cab_type</remote-alias>
              <ordinal>9</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_id</remote-alias>
              <ordinal>10</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>11</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>12</ordinal>
              <family>RideShareBoston</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance</remote-alias>
              <ordinal>13</ordinal>
              <family>RideShareBoston</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1300</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>RideShareBoston</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>RideShareBoston</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temperature</remote-alias>
              <ordinal>16</ordinal>
              <family>RideShareBoston</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>330</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_neighborhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_neighborhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source_neighborhood</remote-alias>
              <ordinal>17</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>destination_neighborhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[destination_neighborhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>destination_neighborhood</remote-alias>
              <ordinal>18</ordinal>
              <family>RideShareBoston</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.607053' measure-ordering='alphabetic' measure-percentage='0.392947' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Price (bin):ok]' palette='blue_teal_10_0' type='palette'>
            <map to='#17becf'>
              <bucket>18</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>16</bucket>
            </map>
            <map to='#2e618c'>
              <bucket>15</bucket>
            </map>
            <map to='#306a93'>
              <bucket>14</bucket>
            </map>
            <map to='#327399'>
              <bucket>13</bucket>
            </map>
            <map to='#347da0'>
              <bucket>12</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>11</bucket>
            </map>
            <map to='#368fae'>
              <bucket>10</bucket>
            </map>
            <map to='#3d98b3'>
              <bucket>9</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>8</bucket>
            </map>
            <map to='#55aabd'>
              <bucket>7</bucket>
            </map>
            <map to='#65b3c2'>
              <bucket>6</bucket>
            </map>
            <map to='#73bbc6'>
              <bucket>5</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>4</bucket>
            </map>
            <map to='#8fcbce'>
              <bucket>3</bucket>
            </map>
            <map to='#9dd3d1'>
              <bucket>2</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>19</bucket>
            </map>
            <map to='#acdbd4'>
              <bucket>1</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>17</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;UberPool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lux Black XL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Lux Black&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UberX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lyft&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UberXL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lux&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Lyft XL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shared&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black SUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WAV&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cabs taken to each neighborhood from DT &amp; NE'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;Downtown&quot;' />
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;North End&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk])</cols>
      </table>
      <simple-id uuid='{C4692066-4378-42B7-A129-EEAC25FAB2CF}' />
    </worksheet>
    <worksheet name='Comparison of total distance travelled from each neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='73' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_0' value='3' />
            <format attr='stroke-size' id='annotation_1' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled (from):</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt; miles</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>&quot;North End&quot;</value>
                    <value>17092.299999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='213'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled(from): </run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt; miles</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;North End&quot;</value>
                    <value>34564.149999999776</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C12D4917-41B3-4BB9-B1BE-5449D7EBE856}' />
    </worksheet>
    <worksheet name='Comparison of total distance travelled to each neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='73' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_0' value='3' />
            <format attr='stroke-size' id='annotation_1' value='3' />
            <format attr='stroke-size' id='annotation_2' value='3' />
            <format attr='stroke-size' id='annotation_3' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled(miles):</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>&quot;North End&quot;</value>
                    <value>17092.299999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled(miles): </run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;North End&quot;</value>
                    <value>34564.149999999776</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-157' y='20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='215'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled(to):</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt; miles</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>&quot;North End&quot;</value>
                    <value>20181.429999999968</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='147' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Total Distance Travelled(to):</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]&gt; miles</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;North End&quot;</value>
                    <value>34461.099999999868</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='92' y='93' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{4E65AC4B-BAAC-4B9A-AA98-CA22E9AFF42F}' />
    </worksheet>
    <worksheet name='DT &amp; NE $20'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;Downtown&quot;' />
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;North End&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' value='27' />
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] * [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk])</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk])</cols>
      </table>
      <simple-id uuid='{5F449403-541A-41D4-A4A4-D97004344675}' />
    </worksheet>
    <worksheet name='DT &amp; NE $20 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;Downtown&quot;' />
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;North End&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{0534108D-EC02-4337-BAAC-31CBF781392C}' />
    </worksheet>
    <worksheet name='DT &amp; NE $25'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='member' level='[none:Price (bin):ok]' member='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;Downtown&quot;' />
              <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;North End&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' value='27' />
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] * [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk])</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk])</cols>
      </table>
      <simple-id uuid='{3636B398-F65B-4E65-A5DE-62D4955545F7}' />
    </worksheet>
    <worksheet name='DT dropoff cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]'>
            <groupfilter function='member' level='[none:destination_neighborhood:nk]' member='&quot;Downtown&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Black&quot;' function='range' level='[none:name:nk]' to='&quot;Lux Black XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Lyft XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;UberXL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='63' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{E88D55A2-8060-455F-B132-CFE3A901172D}' />
    </worksheet>
    <worksheet name='DT dropoff most revenue cars (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]'>
            <groupfilter function='member' level='[none:destination_neighborhood:nk]' member='&quot;Downtown&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Black&quot;' function='range' level='[none:name:nk]' to='&quot;Lux Black XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Lyft XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;UberXL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='63' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{83318653-8E17-4C17-8FF7-AC60B501CEF0}' />
    </worksheet>
    <worksheet name='DT pickup cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Black&quot;' function='range' level='[none:name:nk]' to='&quot;Lux Black XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Lyft XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;UberXL&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;Downtown&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='63' />
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{D2276BAF-0948-481B-8007-DC63872708FE}' />
    </worksheet>
    <worksheet name='NE dropoff cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]'>
            <groupfilter function='member' level='[none:destination_neighborhood:nk]' member='&quot;North End&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Black&quot;' function='range' level='[none:name:nk]' to='&quot;Lux Black XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Lyft XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;UberXL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='63' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{8513ED2F-D030-4905-A5DF-317E1A544888}' />
    </worksheet>
    <worksheet name='NE pickup cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Black&quot;' function='range' level='[none:name:nk]' to='&quot;Lux Black XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Lyft XL&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;UberXL&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]'>
            <groupfilter function='member' level='[none:source_neighborhood:nk]' member='&quot;North End&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='63' />
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / ([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{42A4AC04-4655-42C0-8804-EF87F90250A2}' />
    </worksheet>
    <worksheet name='Number of cab requests depending on the car'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' member-value='&quot;Allston&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='69' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] * [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk])</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{61414C94-7A9A-4F37-A9A5-FDA8D3A761C7}' />
    </worksheet>
    <worksheet name='Rides Requested from each neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Datetime' datatype='date' datatype-customized='true' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Weekday' name='[wd:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='Total number of rides' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[wd:datetime:ok]' value='143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' />
              <path column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[wd:datetime:ok]</cols>
        <pages>
          <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[wd:datetime:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-color='#69aaa5' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{422621CD-AE5C-4BB1-AB22-DEB90C55515C}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='Distance (bin)' datatype='integer' name='[Distance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[distance]' peg='0' size='0.2' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Distance (bin)]' derivation='None' name='[none:Distance (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok]'>
            <groupfilter from='0' function='range' level='[none:Distance (bin):ok]' to='28' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='member' level='[none:Price (bin):ok]' member='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok])</cols>
      </table>
      <simple-id uuid='{79B98EA0-7CE2-438B-BF37-DAFCE5284E9D}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:longitude:qk]' field-type='quantitative' max='-7910101.3957404783' min='-7911951.8289370248' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:latitude:qk]' field-type='quantitative' max='5212433.675573769' min='5211487.224543565' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:latitude:qk]</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3590CAB3-9E03-4013-92D1-AABED469DA56}' />
    </worksheet>
    <worksheet name='Total Revenue made from each $5 Payment range'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter from='0' function='range' level='[none:Price (bin):ok]' to='16' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[:Measure Names]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' scope='rows' value='Total Revenue' />
            <format attr='auto-subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' scope='rows' value='$' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='64' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_6' value='3' />
            <format attr='stroke-size' id='annotation_5' value='3' />
            <format attr='stroke-size' id='annotation_4' value='3' />
            <format attr='stroke-color' id='annotation_6' value='#e6e6e6' />
            <format attr='stroke-color' id='annotation_5' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</cols>
        <annotations>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='189'>
            <formatted-text>
              <run bold='true'>Total Revenue: $</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>2104006.3500000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='8' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='204'>
            <formatted-text>
              <run bold='true'>Total Revenue: $</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>2042724.5499999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-33' y='-23' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='190'>
            <formatted-text>
              <run bold='true'>Total Revenue: $&lt;</run>
              <run bold='true'>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>1048799.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='22' y='-63' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9B91A542-A9E5-4401-ADBC-8EBC86EDDDEF}' />
    </worksheet>
    <worksheet name='Total Revenue made from each type of cab'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' scope='rows' value='Total Revenue' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</rows>
        <cols>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{73A43F40-C983-4C17-8DEE-99006771C0FC}' />
    </worksheet>
    <worksheet name='Total rides taken from each neighborhood costing between $20 to $30'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_neighborhood]' derivation='None' name='[none:source_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Cab Pick-up Neighborhood' datatype='string' name='[source_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='Total number of rides' />
            <format attr='auto-subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='taken from' />
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='76' />
            <format attr='text-format' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.350649'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Downtown&quot;</bucket>
                      <bucket>4</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6429.4343434343427'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='40' y='-108' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.623377'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Downtown&quot;</bucket>
                      <bucket>5</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='13058.747474747473'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-97' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.584416'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;North End&quot;</bucket>
                      <bucket>4</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5596.606060606061'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='42' y='-132' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.623377'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;North End&quot;</bucket>
                      <bucket>5</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='17023.010101010099'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='93' y='-83' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Total Number of Rides: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.441558'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Downtown&quot;</bucket>
                      <bucket>4</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5306.6810966810972'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='22' y='-115' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Total Number of Rides: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.714286'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Downtown&quot;</bucket>
                      <bucket>5</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12701.797979797981'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='85' y='-128' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Total Number of Rides: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.584416'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;North End&quot;</bucket>
                      <bucket>4</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4930.0779220779214'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='18' y='-132' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Total Number of Rides: </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.623377'>
                  <node-reference>
                    <fields>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;North End&quot;</bucket>
                      <bucket>5</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='17015.616161616159'>
                  <node-reference>
                    <axis>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='93' y='-93' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{79C5CDA8-7223-4E72-B695-1B45D52575C3}' />
    </worksheet>
    <worksheet name='Total rides taken to each neighborhood costing between $20 to $30'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Cab Drop-off Neighborhood' datatype='string' name='[destination_neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[destination_neighborhood]' derivation='None' name='[none:destination_neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='Total number of rides' />
            <format attr='auto-subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='taken to' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='77' />
            <format attr='text-format' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_6' value='3' />
            <format attr='stroke-size' id='annotation_7' value='3' />
            <format attr='stroke-size' id='annotation_9' value='3' />
            <format attr='stroke-size' id='annotation_8' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane decimalplaces='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>&quot;North End&quot;</value>
                <value>21986</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>&quot;North End&quot;</value>
                <value>7632</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides: &lt;</run>
              <run bold='true'>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>&quot;Downtown&quot;</value>
                    <value>6758</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides: &lt;</run>
              <run bold='true'>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;Downtown&quot;</value>
                    <value>14790</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides: &lt;</run>
              <run bold='true'>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>&quot;North End&quot;</value>
                    <value>7632</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides: &lt;</run>
              <run bold='true'>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;North End&quot;</value>
                    <value>21986</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{98E28935-99ED-4EBC-8CC9-73337FEAEE24}' />
    </worksheet>
    <worksheet name='Trend for total number of rides from 6pm to 8:59pm for every $5 price range'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='3 Hour Range' datatype='integer' name='[Hour (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[hour]' peg='0' size='3' />
              <aliases>
                <alias key='0' value='12 am to 2:59 am' />
                <alias key='1' value='3 am to 5:59 am' />
                <alias key='2' value='6 am to 8:59 am' />
                <alias key='3' value='9 am to 11:59 am' />
                <alias key='4' value='12 pm to 2:59 pm' />
                <alias key='5' value='3 pm to 5:59 pm' />
                <alias key='6' value='6 pm to 8:59 pm' />
                <alias key='7' value='9 pm to 11:59 pm' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column-instance column='[Hour (bin)]' derivation='None' name='[none:Hour (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]'>
            <groupfilter function='member' level='[none:Hour (bin):ok]' member='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter from='0' function='range' level='[none:Price (bin):ok]' to='11' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</column>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='Total Number of Rides' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='23' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_1' value='3' />
            <format attr='stroke-size' id='annotation_0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides:</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6</value>
                    <value>4</value>
                    <value>5744</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Number of Rides:</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
                      <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6</value>
                    <value>5</value>
                    <value>9532</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{AE5A3210-6DB9-4493-8064-FA71DC1C361F}' />
    </worksheet>
    <worksheet name='Trend for total number of rides per three hour for every $5 price range'>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column aggregation='None' caption='3 Hour Range' datatype='integer' name='[Hour (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[hour]' peg='0' size='3' />
              <aliases>
                <alias key='0' value='12 am to 2:59 am' />
                <alias key='1' value='3 am to 5:59 am' />
                <alias key='2' value='6 am to 8:59 am' />
                <alias key='3' value='9 am to 11:59 am' />
                <alias key='4' value='12 pm to 2:59 pm' />
                <alias key='5' value='3 pm to 5:59 pm' />
                <alias key='6' value='6 pm to 8:59 pm' />
                <alias key='7' value='9 pm to 11:59 pm' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='$5 Cost Range' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[price]' peg='0' size='5' />
              <aliases>
                <alias key='0' value='$0 to $4.99' />
                <alias key='1' value='$5 to $9.99' />
                <alias key='2' value='$10 to $ 14.99' />
                <alias key='3' value='$15 to $19.99' />
                <alias key='4' value='$20 to $24.99' />
                <alias key='5' value='$25 to $29.99' />
                <alias key='6' value='$30 to $34.99' />
                <alias key='7' value='$35 to $39.99' />
                <alias key='8' value='$40 to $44.99' />
                <alias key='9' value='$45 to $49.99' />
                <alias key='10' value='$50 to $54.99' />
                <alias key='11' value='$55 to $59.99' />
              </aliases>
            </column>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column-instance column='[Hour (bin)]' derivation='None' name='[none:Hour (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]'>
            <groupfilter from='0' function='range' level='[none:Price (bin):ok]' to='11' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' scope='rows' value='Total Number of Rides' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]' value='23' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</rows>
        <cols>([federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok] / [federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok])</cols>
      </table>
      <simple-id uuid='{9810EFE4-472F-46AD-86FC-245567C3DFC6}' />
    </worksheet>
    <worksheet name='Uber v Lyft Market Share'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='RideShareNeighborhoods(3) (RideShareBoston)' name='federated.0kl9fbm0736vkr16vt0ju02oxm7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0kl9fbm0736vkr16vt0ju02oxm7s'>
            <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
            <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' />
              <wedge-size column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' />
              <text column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:cab_type:nk]' />
              <text column='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>$&lt;</run>
                <run>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:cab_type:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2B43EB7A-58E7-42D6-8EEE-84DAE9EC2619}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Trend for total number of rides per three hour for every $5 price range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396895D5-EB76-435C-BFAC-F8B4CA8618E9}' />
    </window>
    <window class='worksheet' name='Trend for total number of rides from 6pm to 8:59pm for every $5 price range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Hour (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B788CB29-5B8A-464A-95D9-0A134849378A}' />
    </window>
    <window class='worksheet' name='Total Revenue made from each $5 Payment range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{257BB075-E656-46D0-AFDD-9BA9D2ADD1DD}' />
    </window>
    <window class='worksheet' name='Total Revenue made from each type of cab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:cab_type:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30CD05AE-ADD4-4A25-8549-6ADFBA1CA04E}' />
    </window>
    <window class='worksheet' name='Comparison of total distance travelled from each neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BCB5C9DF-B53A-4A7A-9164-717C4D1B496A}' />
    </window>
    <window class='worksheet' name='Comparison of total distance travelled to each neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:distance:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{52DB5F94-390A-4089-9139-ABE143120967}' />
    </window>
    <window class='worksheet' name='Total rides taken to each neighborhood costing between $20 to $30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38EE0E20-2ABA-4C2D-A7F0-F6C4F932CCD1}' />
    </window>
    <window class='worksheet' name='Total rides taken from each neighborhood costing between $20 to $30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B73A696-0929-416B-956E-FD9E5F5F4ED1}' />
    </window>
    <window class='worksheet' name='DT &amp; NE $20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{964D33D8-D532-45A6-BA9E-C3FD88047593}' />
    </window>
    <window class='worksheet' name='DT &amp; NE $20 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19BAE4E3-9A03-4048-B973-264FC82BA22C}' />
    </window>
    <window class='worksheet' name='DT &amp; NE $25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{016F9B7B-AA08-465B-AEA3-68D94510C852}' />
    </window>
    <window class='worksheet' name='DT pickup cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D34D53F-9699-45B5-B421-2DC01D448400}' />
    </window>
    <window class='worksheet' name='DT dropoff most revenue cars (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D38F5E7C-58CC-46C6-A59F-941AA4B45205}' />
    </window>
    <window class='worksheet' name='DT dropoff cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5541795-5F9C-403C-A970-E9AE97209ADC}' />
    </window>
    <window class='worksheet' name='NE pickup cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B66D082-878B-4813-A87B-FC35035869E4}' />
    </window>
    <window class='worksheet' name='NE dropoff cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD602A2B-5F9A-45CA-94CD-71A3B18B85A0}' />
    </window>
    <window class='worksheet' name='Cabs taken to each neighborhood from DT &amp; NE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[min:distance:qk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:destination_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E0BE0B0-DA09-4161-AE7D-10AC1BB24314}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Distance (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AE41ED1-2255-4386-932F-D759F91FE457}' />
    </window>
    <window class='worksheet' name='Uber v Lyft Market Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:Price (bin):ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:cab_type:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16DB3CDA-57A9-473F-B2DF-3464992EF5C0}' />
    </window>
    <window class='worksheet' name='Number of cab requests depending on the car'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1345897C-4E66-4E6C-958D-BE52B858186A}' />
    </window>
    <window class='worksheet' name='Rides Requested from each neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>7</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[md:datetime:ok]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:cab_type:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:day:qk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:name:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F61F9E4-7570-44C6-8E30-277FFFF743B4}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:latitude:qk]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[avg:longitude:qk]</field>
                  <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>42.339029884357757</value>
                <value>-71.066403486388495</value>
                <value>&quot;North Station&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source:nk]</field>
            <field>[federated.0kl9fbm0736vkr16vt0ju02oxm7s].[none:source_neighborhood:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D72B2C18-20B8-4191-A566-68C8C83FEF4B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cabs taken to each neighborhood from DT &amp; NE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison of total distance travelled from each neighborhood' width='192'>
      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
      oNWaeG0hLjw5CRaxJgUQsSYFELEmBRCxJgUQsSYFELEmBRCxJgUQsSYFELEmBRCxJgUQsSYF
      ELEmBRCxJgUQsSYFELEmBRCxJgUQsTZ79wPOoE82h7jBye7dbWQTdMqpKSUST0gBzsC25WP7
      J7sJPKkpgBRg2uQQSMTaxHOBvlndoJpPsLE7oDVXw3EcOpcvn3Y+IU7VxHOByoUsrufQKOQ4
      6O+TSBUJZS7QhKY7u0fmAj11ZnOB+v0Dms0m5nDMUquJ7/s/mblAYRQxdE++QwxdJaEdNadH
      4aQleHZ2j8wFeurM5gItLy8DUCpNvPbM8IKI99dP/hvRXqsbzBdk9PoskZNgEWtSABFrUgAR
      a1IAEWtSABFrUgARa1IAEWtSABFrUgARa1IAEWtSABFrUgARa1IAEWtSABFrUgARa1IAEWtS
      ABFrUgARa1IAEWtSABFrx5oMt7l2n4GrUMwksR2HpU7nlGIJcTaOVYCUkWKwuUnkp9B/QnOB
      ghPO7Txq7efJXKCZngv0RDabo9FuMVerEAQ/nblAAdPZGc+u/TyZCzTTc4GeSGXyXM7kn3x0
      nC8V4kKSk2ARa1IAEWtSABFrUgARa1IAEWtSABFrUgARa1IAEWtSABFrUgARa1IAEWtSABFr
      UgARa1IAEWtSABFrUgARa1IAEWvHKsDI7LFy7wGWZdHr9U4rkxBn5lgF6PYtirrKw/X79Ab2
      aWUS4swcqwCZpMa2OaJRb5HUoinMOhDifB3rpvhKo02l8fTjJ2NRhJhVSnSCwTJRFGGaJoVC
      4fDjl60WEaHww6M8FOXxqI7H60Woqvr4/yfI87IxIQpPR4mYpkk+n59otk4UPc71Mk/WDoIA
      TdMOc01z7Se5AcIo+sGJK4+32ku2uALq9+R+6f6cZJt/tz8tyyKTyTzdn1N4rqjq0bnDly8O
      yjFfAf6YoijPffPj8Zh0Ov3DjxtGjF2HtGFM/BiTro2iYNv2yz/vj0yytqJwrLXV72bTeJ4D
      6CQS2tTWfiJ0XTxVJXXkLKLD1RnbNsl0eqLjXfWZmTqTbJdg7OAlk6SOOednov2Jh22rpNMv
      f5o+zR1NtHYYOriufrICPOtga43PV3f42a0Od75do1w0cAKNxVqaR32VahZy5QaP7n3NSDGo
      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
      1DYtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison of total distance travelled to each neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DT &amp; NE $20' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DT &amp; NE $20 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DT &amp; NE $25' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DT dropoff cars' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DT dropoff most revenue cars (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUIElEQVR4nO3dS3Mb2XnG8f/pbjQaNxLgnRRJidRI45mxFY0dOzfHVVOVhStV2TjZ5RNk
      l+yTTbLzF0iV16nKKqk43iSOK2VX4jgeZxzNSKMZUaTEO0ASJIg7+nqy0FAjRpQEgHf2+6vS
      gqU+3S8O+kF3A3jRSmutESKmjPMuQIjzJAG4QuRg3jsJwBWhdcRPf/IvlLY3+Y+f/Zxay2Nl
      6RELT9YOLVetVgH4+KNf8ODR0hvX26nvslrcI/RafPjfH9LoeACsrj1bb2n1Mf/5i1/R9sPX
      rCXiwScP+OzTT/HaNT78+HPW1lYB8Nt1Gh3/+Tr1C+t+oQrWVneOetSsra4DsL/5lO2GT/HJ
      AqtbZTaKxTc+NgCrq6XEJaCp1+t09nfZrjbwo4iV9S2+/Xu/yU9/8hNSjkXZd2hsPeG7f/TH
      rK+vYWV89pbvE6SH8fbrpHKDdNoNrISm6iX53h9+wOrKGtfevsPKo18xefsOldXP+eH9NfK2
      y+ZWhQGjztz0JD/+8Y+Zmpygub9LqCyiIOLazDS7xXXsTIKni7v4uNycLvDx/c9pzg7w85/8
      CxOzcyQHRtjZLZNSIUurG9R31imuLVNvu1i+ReH2EAv/9RmPx6eIlEeukMd1A+yoTbWtmJm9
      xtOtfe5OzfHpvTJb5jYpHfCvP/pn5t79Gl6jhpPOsbP2iNk73+FbX3vr+axJAK6MkHR6gN1G
      wPSwQ7Plkc8lWXi6jlJgZws0n6xyc34OpeD6/E3aHU277uIYMHHjOsX1EtX9KlNz13l3dAK0
      pulDJmEwMT3H/9y/h2UGTIzmSeo2pmXi2A6fL65zY3aaa1OTPKju0W7WUFaWmRvz1MpFnGye
      O3euERkdbDvJb33jXVZWnjI5e5PJ8UFKdZ9qdZ/pd97BtgwMN4dpWSjloYwE83PzJFomW6sl
      lA1KKRSKSGvy+QI6ClGGiQIy+TzTdsjmZpGxqWvoRJqZ6Tw6CjCiOWYmhg/Nmjqpd4G01iil
      TmJVsXIw/Scxd57nYdt23+NbtT3Wyw1uz88+qy1w2ao0mRgd6m09zToJJ0PC7O4M+2C7t+Zm
      6XYaXpy3oFNlr51grJDuqU44wQDU63VyudxJrKonWmtQijfN20UNaKvVwrZtLOtsD8bdBq/b
      +T1rURTRarXIZrPHWs8lPwWKuP+/HzH71ttUKjUmh7I8Le5y+9Y8geeRTCaBZxda9z5d5O3b
      c7Q9jXZrRFaGybECTx4/Jj88Qrm8x42bt0haF+2pPh17WxuUah4jGQsXG92pkRu9RiZpPZ83
      0Czev0fm2g3au1sMTc7SKG8xOTfH/tYGrcBE+U2SuWHGhvPn+nj6dcnfBdKEgSbEJGWbNFst
      ojAk8l1+/etPWF5e5NHiMoEfoFSEkxkk8l06HZdSsYTWAa4bsLq8ih922NmpnvcDOjNBEBJF
      IQP5Aqb2SWTzNKsVFhcesr66zP0Hn1JvuQRhhEZRKAzSqVfY26sTav1sDktFOq5LqbR13g+n
      b5c8AKAMg3ajSrFYxI0UBD6RmWSkMIBCoRQo00AHLuWdHYrFbVKZDPmhAp12SCplMTUzg6FN
      CsNnfwp3XgzDoNPpsLayTIhJY28by8kwNjrGsxNxBUphKEWzXmF1Y4sw0kTao1qpk85kKBSG
      yGbSFAqF8344fbv01wCB72MmEm88R/V9n0QicSY19eLcrgGiiDCK3rjd0PdRicSFe6WUa4Av
      WF3u1Bdx5z9PyjCwjDfv1uYVn7eLFuy+rSwtsF7c5lWHM9d1z7Sey2J/d5tHC4/xw6NnLvBc
      XvFfV8KlPwIcsNMDBF6bpYXPMBM2UaggCoisBJ7n067uMjQ6TtsLGcmnqdbb2KHPvudz+707
      pM3zfgTno+1FzM9M8ujhA5RhMDg0TKtRJ+PY7JYrKO1jF8YI6jWS2Rwq8klmB2nulUgNjjF7
      beK8H8KxXJkANKq7GM4AhlIoK0UUNEAphgcHQUHdVkRKoZTCbbawLYNUZoShrEl0hV/h3sRS
      IUvLa+QLBWq1OoQetmmikmlmZgfpdCq0AkWoIJNxaDU0nuczOjF93qWfiBO7CK7Vase+IImj
      druNbduYZkwPQX3SWtNqtchkMsdaz4kdAcIwpNVqndTqYsN1XYIgkAD0SGtNu90+9qf7JxYA
      y7LkCNAHwzDO5W3Qyy6KIpRSx97nrsy7QEL0QwIgYk0CIGJNAiBiTQIgYk0CIGJNAiBiTQIg
      Yk0CIGJNAiBiTQIgYk0CIGKtq29gee0G69sVBpIGNQ/MoElgJMkmbSIjweT4yGnXKcSp6CoA
      dipLKlmnWq3QdGGgkMPWIStLi9x6/7cIw5AwDAmC4LTrvXKiKCIMX/fDsuIoWusT2ee6CkCn
      UWV3d4+pyQl0tUkmYRCaad69+3V8v42ZGcQ0TflKbx8Mw5C560MURScyb12NdrKDfPW9QQCG
      hobfsLQQl4dcBItYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMA
      iFiTAIhYkwCIWJMAiFjruiVyq9JkemKEpaerZJMGgZkkl0oRRBHDQ5f3PrEi3rpuibSqdUob
      qzRaHZLJHAQdPr+/wFe+8TvSEnkM0hLZnzNviSyVtpianCRhdIgCF205vPXOe7QbVQbTI9LW
      1ydpiezPSbVEXvo7xV9253Wn+MvupO4ULxfBItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYk
      ACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1npoiWww4Jhs7tbJpwwC46AlUjMyLC2R
      4nLqqSUyncmSafmERBC6PHrwWFoij0laIvtzLi2RrUaDSCVIJSIiw+HWu+/RadYYTA9LW1+f
      pCWyP2d+l8j379491oaEuIjkIljEmgRAxJoEQMSaBEDEmgRAxJoEQMSaBEDEmgRAxJoEQMSa
      BEDEmgRAxJoEQMSaBEDEmgRAxJoEQMRaV/0Age9SqTXJJk3KtQ5ZGwIjScZJEoYhudzxblMj
      xHnpKgAKA9ft0GkGaK2pBQp0k+XPS7x15+vSEnkM0hLZnzNtifTdFpsbG4yNDFNr+2QTmtBM
      MjU9TbNep5Adlba+PklLZH/OvCXyW9/85rE2JMRFJBfBItYkACLWJAAi1iQAItZO/K2Hv/vx
      J/zs3krXy3//z/6AQi510mUI0ZUjA7D8+BM2tyK++e27JHpcYb3lsb3f7Hr5MNI9bkGIk3Pk
      KVAUhaxtbKDOuhohztiRAWg0I27OjCCf64qr7qUARJGL326xuLGDeR4VCXGGXgqAYSTJpJNc
      m56SUyBx5b0UgPb+Nmu7dd796nsn/xaREBfMSwEor28SGh7//q8/wz+PioQ4Qy+9yM989S4z
      XM57AfhhSM3tdL18OmGTSvT6Rq+4Sq7UWc5Grcrf/vLnXS//3dtf4YP5W6dYkbjo5KsQItZ6
      OgKUtzbZqXUYSCoCI8lAyiHQMDoydFr1CXGqegpAp92m0+6QSw1iaI+Fh4sv3SVS66inAk6y
      lTKKemstjCJ97m2c0hLZnzNtiTzgOA6OC0oHaDPJ21/9Gl6rhvnCXSKV6u2s6iTbAQ2jt4/u
      DEOdeyuitET250xbIg+MTFxjZOJY2xPiQpGLYBFrEgARaxIAEWsSABFrEgARaxIAEWsSABFr
      EgARaxIAEWsSABFrEgARaxIAEWsSABFrEgARaxIAEWu9dYQ1a5T2GuS+aInMphyCMGBwYOC0
      6hPiVPUUgPW1VbSdo4kC3WHl0UNu3/2mtEQeg7RE9udcWiIH83mK21WMjIU2kszcmKNZr5HP
      jEpLZJ+kJbI/59ISOToxzejE9LE2KMRFIhfBItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYk
      ACLWJAAi1iQAItYkACLWJAAi1iQAItbkO7jiUgvCiO//ffd3Bv3K7Ajf+847z/+WAIhLTWvN
      Lx9udL28aRw+6ekpAFpHbGyWcCwIjCS5lEMQhgwOSkukuJx6CkClvMV+rcVgNonWNT599Bm3
      3/+WtEQeg7RE9ud5S2SPc6d1dOg57ykAvh/QrO+TSgyAleT6/DytelVaIo9BWiL787wl0uzt
      OVfKODTXPc36+NQM41MzPW1QXH1R0MAr/1vXyyfyv43pTD7/+9G/f8z+5l5XY5WCb/3pBz3X
      +CoX7mVn88//grBa62pZe36O8b/6y1OuSLyJDmq0Vn/Q9fLZ5MShAOytldle6PJCVqley3ut
      CxeAqN1Bt9tdLas7nVOuRlx18kGYiDUJgIg1CYCINQmAiLULdxF8ma38z2P8jtfVsnY6yezX
      3zrlirr3w4f3qXT55kPWtvmTr9095YrOhgTgBC389D6tSqOrZXNjgxcqAE/2dik16l0tm3dS
      p1zN2ZFTIBFrEgARaxIAEWsSABFrEgARa/Iu0AVR2mvwgx991PXyv39nlg/enzvFiuJBAnBB
      tF2fjx4Vu17+5lThFKuJj94aYtwWu7U2OcckNJI4CYsoCnEc57TqE+JU9dgRFlLbr9CxDCId
      Udvb59rNr2Db0fPWvl5bIqMv2im/pLseqzWHxkZRb9vWkT63dsSD2g/mrdfaoxOuvftZf+bQ
      vPdYx0ttoLqXresv9jP9vBW3FwfjDvQUgN3tTUKdxPdaRGaCXC6H63ZQKoNSCsMwUD02LBim
      iXGoU7/78UpxaKxh9HZNf1DzeTio/eBfr62kJ117r20mh7bdYx0Hj/nLjfe4zxgGWusv1tNr
      S+Th2nsKwNT1m4SRxjIMtFIYSqG1Rin1/F/vU0nPoTmpsahjjj+mg20/m7tex16M2p8Xc5zx
      vY1EHdrv+ht/oKcAmKbF/+9BPs8nQYjjks8BRKzJ26Av8GsfEzQedb18cuy7GJb8KNhlJgF4
      gb//IZ3SP3a9vF34XbggAaj+wz9S/ad/6nr5ib/5a+wbN06voEtCAnBF6CgCv4dfuevprcer
      S64BRKxJAESsSQBErEkARKxJAESsSQBErEkARKxJAESs9fVB2HZx/dk9wtIpgjCgkM+fdF1C
      nIk+jgAaL9SEXpOH936NYWdOviohzkgfAVBEXgc/Mpi//TbN2v7JVyXEGenrFGh2/tahv6Mo
      wvM86vU6uSTMDHffI9xpt6gbX7aoeRPjRNlsV2P18DD1+pe/Z+l3OoxYia63bfrhofGun8Xl
      evfjWx5G8OV4azCJbXTXomcO2NTrdVzXxfM8fLfT07ylLH2o9o6TxLt2revxTd/HfWH8gGES
      dDl3OdM6tO3Ic2n3MG+qrXCtL8ertIk93N3vjSqlqNfraK3pdDr4QdjTvOVT6lDtSuvjfytK
      62dPRi6Xe+0yr2ueCcMQ8xV3/HvT2CiKXtseeJxtn8T412m32yQSiVfeJfK8a3/d+INd53X/
      f5rbbjabZF/xYtnttk/k26CHWyJfvczrmKb5ymXeNPZg5+93/Ou2fRLj3+R1c3fetXfzuM6j
      9hdbcY+z7VP7OvR+aZWFjTJDA2myQxMQRThGwP5+i6GpcXJO6lA/51EF1/d2UekcFhHoEK0V
      hp0kaR1+1TgYWywVGRsqEGroBGCbYDR3ube2Q04Z5K/fQLseWRuq5Rrp6UmGnNShbbfKRfyB
      cZI6wK3v8ot7D5gYneK9d2/xdGkRO5smn50gn3de2j6ErC4XsR2TWmWX8Zl5WtUK+aFhmvV9
      yrt7pFJZhsbHyaWSr5y7T379IVZmmIyjQJtMTY2zvVvDiDoURqZwkl8+bUc/0ZpScYt8IY8C
      Ip51ah/18zVKKdz9Is3kJGnVQUcBKAMr4bDw8B6hmSGfsVGGydj4ODu7FUwC8kNjpBz70LpK
      pSL5whAGmo9++XMiJ8833r/D5vITEhkHSw0yOZk/tO0Dq8srOI5NvVFjYGgCvCbpXIGO16ay
      vYUzOIilHSYmh145b58/+JiOTlAYSJMwDQqjE+zu7GAakB8aIeV8OedKKaql1dP8HEBj2w7o
      iGqlwuLSIrv7dWzl83S1y1tifqFYKrG+UeKzh59ivCHZnco2xdIqG1tlVjbLaMCwU5g6ZL+y
      z+LSIju7VTJJxdKTlaNXohTFtSc0XMXd37jDyNAwlmkS+B62/eodFxRB6OO6HuncIBuLn7K0
      sszS4yUSuQF818VOvm78MxqFbScIOw3KxRX++5MlCkMFFhcWwOzuKdNAqbRFcW2d8s4mW5VX
      //b/wTlwqbTJxuYGDx98hjKf/cCBbScIfZdyaY2P7j0gVyiw9nQJ74hfcdEa3FqFx6tFrr/1
      DtenxrEtC6VDrMTrry+CMKTjeiScDNW9bR4vLLD66HM80yaK/C/m7fVn6xqwEzY6Ctkrb3Hv
      V7/CHhiiuPqEln/02BO5BgBeugbw2g1WNneYnprAdzs03JCUGRIZDikngZNKvXFnDrw2y2sl
      BjIOVtIh5TgoM4FjH33g2t0u4mPhtRoMjkxgm5C0YPHpOtPT1whDn2rDJZdU+JFFOpMk6aQw
      X6gjcJs8Xd/BImT6xhw6CqmUdxgaHSWKIHBblLbKXJ+/iXXEvlgpb6ETWfxWhdTAMLXyFoPD
      Yzi2CYaJ22pQ2tljbm4O01C0Wi1s2z50DbC2vESmMEHahvJOmfzwCPvVBqNDOUJtkn7N0eMZ
      TXF9FSuZptn2GBsbRmlNKnX0hWbotXiyus1gLomZcEinHAzLZm9rHTOdZyCVoFwuUxgeZq9S
      Y2ykQBhCOn34iLKx+hRlJVBWhqHBNJHfwUimiAINBJQ2NpmYnSdlv3ze36xVqHuQxCO00oSt
      fezUILl8Gt+NQPsU19eZunELJ2EQRRGtVuvQNcDW5ho6kSWfc9grlxkYGmavvMf4+AhhqEmn
      Dz9+r904vQCI7hwVAPFmRwWgH/JVCBFr/wdUBNxMC+oJ/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DT pickup cars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NE dropoff cars' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NE pickup cars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of cab requests depending on the car' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rides Requested from each neighborhood' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nCy715Nth3Xm9zt7n31yzt2nc87dNwfg3otIAARIMIMaybLGNVWe8njsF5er
      /KARRmXJZVfNjMdjD0vBGlHSDC1RJEiQBIl0cXPO3X075z65T447+wH8D9bLt76wvmX5n//V
      vzEfLW4gmDq6qSOKIh6Pl1azhSq3GRjoZaCvB7/fi91mQ1NU6tUqTofEyuoSly6dwy5CNpfH
      4/GhyhrZTJ5I1Mf1u+sc1droSocXT8/Q25NgfX2N48ePkc8eMDTQzy9+8RsQ7Zw4Oc/C/AK1
      ehO/P4BgtfGr33zKF5ev4JAkNNXAFE0kO5w+ucDE+ByGLlCtVolGQ9y5dYd8oUwsHieTTTE5
      NcHewSE7OweYQDBkIxbz4bS7ee2VN0mnsqysrNOTHGDz+Qpmu8Wp0wtEuoJ4vG7+7r/8hP1c
      jmOnBvC6JdSGxqnj5/mbv/8Z3qCH3q4ELrsfwephfHKKx08eIVmt+DwefvLTn2PoBmBisVjA
      YuByOvmT//V9Al4HmdwBrUoRm1XiP//9r8mV2xg2F51OnVMLUzx4vIzT7qZeq7KwMM3I6BCt
      Rh0MA7nTxu+2USvlGBkdYnNvn8NUicHBMSbHB/B5HTQ7Fsr1KjduXMHtkfD5XJSPGvT0jLG2
      vs34xAgup51b12+xf3CIQxJ47zvfpqWaVGsdVFNBlASsgp3NzW0UTeVgbx9N18AEp9PK8GgX
      0biParVOJObD4/awu3VEtVHDaRPB0DCtIEo2zHaTC3MnibpCaC43DidUyzWOijI/+tmvkKwi
      v/Peu3SaZXa2UjQ7Naw2iWgsjt/nplyuomk6pVIJE5GRkVGuX7tNsVzD5nIyOzWJ2ynQ1xvH
      YbXxfHUb0eakXCkyMTVGMhHi4HAFBQWrILG9u0Oya4BGvYkYSIy/f//BM/b3DyhWGpTKdVZX
      N0ilM4yOjmGVJLLZHPVaE8nuRJY1LBaJ2/fu8ekXt0gfHjE51ovX6yaTyrK5voGhavQN9HHz
      9iLPl5/yyovHOHFimv2DHdbWVsnls/QmgtitApFojI3dAwJ+H16vF5fLRSad4eat+6RzRZaW
      VqmUK2xtrVGsFnB5nVTLdQ4PsxiGQLFYRtcNZFlGNwR+8tOf8ujJU5ZX12kpdTp6g7ZSxelS
      ESUFt9uKoencvf2ASDDGg3sPkWx2rly/AhaD7Z0N4skYstGi1siidGrkDtOMDY5gGhJ/+/e/
      oNIos7uzxt7uHl3JfkqVGlubm3THonzl5Utcu3GPa9dusb+fYv8gzeFBhp29feq1Ci+9eI4H
      957w6cc/YWn1OV/cWmJ9K0Wx2qRUqbK++pxStcrm1jY727ssLi5xdFQiEe+iWCzRaDQ5SKWJ
      RYPI7QYzM2MUyhnSqSLDgxP0JXtJ54/4oz/+39nfz5I9zLO+uAYq5HIVevuH2Nra4od/90Ny
      xQLZdJbf+863WZj+EhRfXPkMh9NNJlvn57/6jMdPl9jeO6St6NRbCgf7adbWNlhafs7hYRqH
      20A3Wywvr3D71mNacoNavUy5fESlfEQ6naLfHyTq9lCq1bl99wGGAbl8jT/9P/4j2zu7HD8+
      QrFwyP7uISvPNzAMlUazwfbWHu1Wh9WVdfy+EGdOn2dpeYmjYpYTJ47j9/vY3trj419/zsbG
      PlarxMHhPlabiMNhMtDfSz5f4e61u1SP6sS7++nu7sFulRjq6UPVBcTh8RPvtzsdrDYrVslG
      vVohEgrwzttv4HTYUDodbJKEACRiCaySRLla5db9u5QqMoVCA13rMNSfJBQMMDk+iqa0KVXL
      HOyn+dqbL+K0toh3xREEsIrQaTeZm54GU8cqCZw5d4YbN+7xbHGZoaER1jc2aMoaBiKDg8MY
      uoaqtxmb7aLZqbGxtsdRvszAQD+SJCFJ9i+3RTDEYSaFKZpYBEj2BelO+kjE/WiKgqbI2KwS
      tUqVhZljOGxu4rEokViCesdgayfFzZsP6e8f4dzpeSYHuog6w8yNzxMKxXB6Q6xu7nKwl0Xt
      KNRrTXb3cnznu9/i2998h1wmzeNHDzEsNp4sLeH1+VA1Fbvdxne/+10mxkfYWFtkcfkqFmeT
      63e3SBc0ZEUBTDqdFqViCbdbAlPB0DqYporVBqOjg9gkCVlRsEoW+nsSTI6NYLM5WFrepNpo
      MjLWz1/9pz/jr//mR+QKTUqlGqaq0hePcmphnOnZcXRMPvrVh/iCdhI9Qf6n/+G/Z3Z0CLsV
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Total Revenue made from each $5 Payment range' width='192'>
      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
      S1UCkuHvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Revenue made from each type of cab' width='192'>
      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
      zjjeW8f4/6PCnCmRkkoqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total rides taken from each neighborhood costing between $20 to $30' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total rides taken to each neighborhood costing between $20 to $30' width='192'>
      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
      Ae7YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend for total number of rides from 6pm to 8:59pm for every $5 price range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend for total number of rides per three hour for every $5 price range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uber v Lyft Market Share' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
